@using System.Globalization
@model BOTGC.POS.Models.WastageViewModel
@{
    ViewData["Title"] = "Wastage Sheet";
    var ops = Model.Operators.ToDictionary(o => o.Id, o => o.DisplayName);
}

@functions {
    public static string TextColourFor(string? hex)
    {
        if (string.IsNullOrWhiteSpace(hex)) return "#111";

        var c = hex.Trim().TrimStart('#');
        if (c.Length == 3)
            c = string.Concat(c.Select(ch => $"{ch}{ch}"));
        if (c.Length != 6)
            return "#111";

        var r = int.Parse(c.Substring(0, 2), NumberStyles.HexNumber);
        var g = int.Parse(c.Substring(2, 2), NumberStyles.HexNumber);
        var b = int.Parse(c.Substring(4, 2), NumberStyles.HexNumber);

        var yiq = (r * 299 + g * 587 + b * 114) / 1000;
        return yiq >= 150 ? "#111" : "#fff";
    }
}

<h2 class="mt-4 mt-sm-5 mt-md-5">Today’s Wastage Sheet <span class="tag">@DateTime.UtcNow.ToString("dddd, dd MMM yyyy")</span></h2>

<div class="tiles" id="operatorStatus">
    <span class="muted">No operator selected.</span>
</div>

<article class="sheet">
    <details open class="mt-4 mt-sm-5 mt-md-5">
        <summary>Top items</summary>
        <div class="tiles" id="topTiles">
            @foreach (var p in Model.TopProducts)
            {
                var cls = p.Category.ToLowerInvariant().Replace(" ", "-").Replace("/", "-");
                <div class="tile cat-@cls" data-id="@p.Id" data-name="@p.Name" data-igid="@p.igProductId" data-unit="@p.unit">
                    <div class="tile__name">@p.Name</div>
                    <small class="tile__division">@p.Category</small>
                </div>
            }
            <div class="tile tile--search" id="openSearch">
                <div class="tile__name">Find another item…</div>
            </div>
        </div>
    </details>

    <details open class="mt-4 mt-sm-5 mt-md-5">
        <summary>Logged items</summary>
        <table class="sheet__table">
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Operator</th>
                    <th>Product</th>
                    <th>Reason</th>
                    <th>Qty</th>
                    <th></th
                </tr>
            </thead>
            <tbody id="sheetBody">
                @foreach (var e in Model.Sheet.Entries.OrderByDescending(x => x.At))
                {
                    <tr data-id="@e.Id">
                        <td>@e.At.ToLocalTime().ToString("HH:mm")</td>
                        <td>@(Model.Operators.FirstOrDefault(o => o.Id == e.OperatorId)?.DisplayName ?? "Unknown")</td>
                        <td class="cell--product">@e.ProductName</td>
                        <td class="cell--reason">@((e.Reason ?? "").Replace("/", "/\u200b"))</td>
                        <td>@e.Quantity</td>
                        <td>
                            <button class="btn btn-link text-danger p-0 delete-btn"
                                    data-id="@e.Id"
                                    title="Delete">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </details>
</article>

<dialog id="operatorModal">
    <article>
        <header><strong>Select operator</strong></header>
        <div class="tiles" id="operatorTiles">
            @foreach (var op in Model.Operators)
            {
                var bg = string.IsNullOrWhiteSpace(op.ColorHex) ? "#cccccc" : op.ColorHex!;
                var fg = TextColourFor(bg);
                <div class="tile"
                     style="background:@bg; color:@fg;"
                     data-opid="@op.Id"
                     data-color="@bg">
                    @op.DisplayName
                </div>
            }
        </div>
        @* No close button *@
    </article>
</dialog>

<dialog id="searchModal">
    <article>
        <header><strong>Find a product</strong></header>
        <input type="search" id="searchInput" placeholder="Type to search…" />
        <div id="searchResults" class="tiles tiles--search  mt-4 mt-sm-5 mt-md-5"></div>
        <footer>
            <button type="button" onclick="document.getElementById('searchModal').close()">Close</button>
        </footer>
    </article>
</dialog>

<dialog id="confirmDeleteDialog">
  <article>
    <header><strong>Confirm delete</strong></header>
    <p>Are you sure you want to delete this entry?</p>
    <footer class="actions">
      <button type="button" id="confirmDeleteYes" class="btn btn-danger">Delete</button>
      <button type="button" id="confirmDeleteNo" class="btn btn-secondary">Cancel</button>
    </footer>
  </article>
</dialog>

<dialog id="reasonModal">
    <article>
        <header><strong id="reasonTitle">Reason</strong></header>
        <div class="reasons" id="reasonButtons">
            @foreach (var r in Model.Reasons)
            {
                <button class="reason-btn"
                        data-reasonid="@r.Id"
                        data-defaultqty="@((r.DefaultQuantity?.ToString("0.##")) ?? "")"
                        data-excludedunits="@(r.ExcludedUnits is null ? "" : string.Join("|", r.ExcludedUnits))">
                    @r.Name
                    @if (r.DefaultQuantity.HasValue)
                    {
                        <small class="reason__default">Default: @r.DefaultQuantity</small>
                    }
                </button>
            }
        </div>

        <div class="qty-row">
            <label>
                Quantity <span id="qtyUnit" class="muted"></span>
                <input type="number" id="qty" min="0" step="0.01" />
            </label>
            <div class="qty-quick">
                <button type="button" data-add="0.25">+0.25</button>
                <button type="button" data-add="0.5">+0.5</button>
                <button type="button" data-add="1">+1</button>
                <button type="button" data-add="5">+5</button>
            </div>
        </div>

        <label>
            Or enter a custom reason
            <input type="text" id="customReason" />
        </label>

        <footer class="actions">
            <button id="logBtn" type="button">Log waste</button>
            <button type="button" onclick="document.getElementById('reasonModal').close()">Cancel</button>
        </footer>
    </article>
</dialog>

@section Scripts {
  <script src="~/js/dist/wastage.bundle.min.js" asp-append-version="true" defer></script>
}
