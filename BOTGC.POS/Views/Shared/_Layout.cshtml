@using BOTGC.POS
@inject BOTGC.POS.NgrokState Ngrok

@{
    var pathAndQuery = $"{Context.Request.PathBase}{Context.Request.Path}{Context.Request.QueryString}";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Management Reports</title>

    <link rel="icon" type="image/png" href="@Url.Content("~/img/Burton on Trent  - favicon.png")" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@8.0.0/dist/browser/signalr.min.js"></script>
    

    @RenderSection("Head", required: false)
</head>
<body>
    <header>
    </header>
    <div class="container-md">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container d-flex align-items-center justify-content-between py-2">
            <div>
                &copy; @DateTime.UtcNow.Year - Burton on Trent Golf Club
            </div>
            <div id="qr-block" class="qr-block d-flex align-items-center gap-2" data-path="@pathAndQuery" style="display:none"></div>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        (function () {
            var block = document.getElementById("qr-block");
            if (!block) return;

            var path = block.getAttribute("data-path") || "";
            var isLocal = (location.hostname === "localhost" || location.hostname === "127.0.0.1");

            function render(baseUrl) {
                if (!baseUrl) return;

                var effective = baseUrl.replace(/\/+$/, "") + path;

                block.innerHTML = '<img class="qr-img" width="84" height="84" loading="lazy" decoding="async" alt="Open this page on your phone" />';
                var img = block.querySelector(".qr-img");
                img.src = "/qr/page.png?pathAndQuery=" + encodeURIComponent(path);

                block.style.display = "";
            }

            fetch("/ngrok/status", { credentials: "same-origin" })
                .then(function (r) { return r.ok ? r.json() : { url: null }; })
                .then(function (j) {
                    if (j && j.url) {
                        render(j.url);
                    } else if (!isLocal) {
                        render(location.origin);
                    } else {
                        startSignalR();
                    }
                })
                .catch(function () {
                    if (!isLocal) render(location.origin);
                });

            function startSignalR() {
                if (typeof signalR === "undefined" || !signalR.HubConnectionBuilder) return;
                var connection = new signalR.HubConnectionBuilder()
                    .withUrl("/hubs/ngrok")
                    .withAutomaticReconnect()
                    .build();

                connection.on("NgrokUrlAvailable", function (url) {
                    if (url) render(url);
                });

                connection.start().catch(function () {  });
            }
        })();
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
